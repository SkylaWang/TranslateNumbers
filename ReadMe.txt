*Solution stucture and framework version
1. The solution contains two projects. One is TranslateNumbers project which has the main function, the other is TranslationUnitTest including all unit test cases.
2. The target framework of both project is .Net Core 3.1

*How to run it?
1. If you have visual studio installed on the laptop, you can open the solution to run it.
2. If you have .Net Core 3.1 instaled, you can build the source code using command line and run it.
3. If you want to directly run it. click TranslateNumbers.exe file in the published folder.

*Assumptions:
1. It must be a positive number, up to 2 decimals.
2. It must be between 0.01 and 999999999999.99
3. It only accept 0.01, ont accept .01
4. The output of one number is unique. For example, the output of 2200 must be two thousand two hundred, rather than twenty-two hundred.
5. By default, after error or output displaying, it will start to wait input again (in a loop).
6. Input "exit" will exit the loop.

*Unit test coverage report:
1. Report Path: /coveragereport/TranslateNumbers_Translation.htm
2. The result in the coverage report is 100% for Transaltion.cs
3. The coverage report is generated by using Coverlet and ReportGenerator parkages
reference: https://github.com/tonerdo/coverlet
		   https://danielpalme.github.io/ReportGenerator/usage.html
		   
